import React, { useCallback } from "react";
import Router from 'next/router'
import type { NextPage } from 'next'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Swal from "sweetalert2"

declare var AlgoSigner: any;

export interface AccountParams {
  address: string;
}

const Playground: NextPage = () => {

  const [openAccountDialog, setOpenAccountDialog] = React.useState<boolean>(false);
  const [accountError, setAccountError] = React.useState<boolean>(false);
  const [accountResponse, setAccountResponse] = React.useState<AccountParams>();

  const getAccounts = useCallback(async () => {
    await AlgoSigner.connect({
      ledger: "TestNet",
    });
    const algoSignerAccount = await AlgoSigner.accounts({
      ledger: "TestNet",
    });
    localStorage.setItem("algoSignerAccount", algoSignerAccount);
    return algoSignerAccount;
  }, []);

  const headersData = [
    {
      label: "Get Accounts",
      action: () => {
        return getAccounts()
          .then((response) => {
            setOpenAccountDialog(true);
            setAccountError(false);
            setAccountResponse(response[0]); //Currently only for one user
            localStorage.setItem("accountInformation", response[0].address);
            Swal.fire(
              'Success',
              `You are connected with Algo account <b>${response[0].address}</b>`,       
              'success'
            )
            Router.push('/choose_role')
          })
          .catch((e) => {
            let url = "https://chrome.google.com/webstore/detail/algosigner/kmmolakhbgdlpkjkcjkebenjheonagdm";
            setAccountError(true);
            setAccountResponse(undefined);
            Swal.fire(
              'Error!',
              `Please, <a style="text-decoration: underline" target="_blank" rel="noopener noreferrer" href=${url}><b>install AlgoSigner</b></a>`,       
              'error'
            )
          });
      },
    },
  ];

  return (
    <div className={styles.container}>
      <Head>
        <title>SBTs Playground</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <button className={styles.button} onClick={headersData[0].action}>
          Connect Wallet
        </button>
      </main>

    </div>
  )
}

export default Playground
